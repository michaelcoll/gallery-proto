syntax = "proto3";

package photo.v1;

// The photo service definition
service PhotoService {
  // GetPhotos returns all the photos
  rpc GetPhotos(GetPhotosRequest) returns (GetPhotosResponse) {}
  // GetByHash returns a photo by its hash
  rpc GetByHash(GetByHashRequest) returns (GetByHashResponse) {}
  // ExistsByHash returns true if a photo with the given hash exists
  rpc ExistsByHash(ExistsByHashRequest) returns (ExistsByHashResponse) {}
  // ContentByHash returns the photo content by its hash
  rpc ContentByHash(ContentByHashRequest) returns (stream PhotoServiceContentByHashResponse) {}
  // ThumbnailByHash returns the photo thumbnail by its hash
  rpc ThumbnailByHash(ThumbnailByHashRequest) returns (stream PhotoServiceThumbnailByHashResponse) {}
}

message GetPhotosRequest {
  int32 page = 1; // the page number
  int32 page_size = 2; // the page size
}

message GetPhotosResponse {
  repeated Photo photos = 1; // the photos
}

message GetByHashRequest {
  string hash = 1; // a photo hash
}

message GetByHashResponse {
  Photo photo = 1;
}

message ExistsByHashRequest {
  string hash = 1; // a photo hash
}

message ExistsByHashResponse {
  bool exists = 1;
}

message ContentByHashRequest {
  string hash = 1; // a photo hash
}

message PhotoServiceContentByHashResponse {
  bytes data = 1;
  string content_type = 2;
}

message ThumbnailByHashRequest {
  string hash = 1; // a photo hash
}

message PhotoServiceThumbnailByHashResponse {
  bytes data = 1;
  string content_type = 2;
}

message Photo {
  // Main

  string hash = 1; // the photo hash
  string path = 2; // the photo path on the daemon fs

  // Exif

  string date_time = 3; // the date
  int32 iso = 4; // the ISO of the image
  string exposure_time = 5; // the exposure as a fraction
  int32 x_dimension = 6; // the x dimension of the image
  int32 y_dimension = 7; // the y dimension of the image
  string model = 8; // the model of the camera that took the image
  string f_number = 9; // the f Number
}